// Date: 1/12/2017 6:51:30 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.cubic_control.hnm.Entity.Model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelPadlockGolden extends ModelBase
{
  //fields
    ModelRenderer Base;
    ModelRenderer BaseExtensionRight;
    ModelRenderer BaseExtensionLeft;
    ModelRenderer BaseExtensionBottom;
    ModelRenderer BaseExtensionTop;
    ModelRenderer LockHandRight;
    ModelRenderer LockHandLeft;
    ModelRenderer LockHandTop;
  
  public ModelPadlockGolden()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Base = new ModelRenderer(this, 0, 0);
      Base.addBox(3F, 20F, 6F, 3, 3, 2);
      Base.setRotationPoint(0F, 0F, 0F);
      Base.setTextureSize(64, 32);
      Base.mirror = true;
      setRotation(Base, 0F, 0F, 0F);
      BaseExtensionRight = new ModelRenderer(this, 10, 0);
      BaseExtensionRight.addBox(2.5F, 20.5F, 6F, 1, 2, 2);
      BaseExtensionRight.setRotationPoint(0F, 0F, 0F);
      BaseExtensionRight.setTextureSize(64, 32);
      BaseExtensionRight.mirror = true;
      setRotation(BaseExtensionRight, 0F, 0F, 0F);
      BaseExtensionLeft = new ModelRenderer(this, 16, 0);
      BaseExtensionLeft.addBox(5.5F, 20.5F, 6F, 1, 2, 2);
      BaseExtensionLeft.setRotationPoint(0F, 0F, 0F);
      BaseExtensionLeft.setTextureSize(64, 32);
      BaseExtensionLeft.mirror = true;
      setRotation(BaseExtensionLeft, 0F, 0F, 0F);
      BaseExtensionBottom = new ModelRenderer(this, 22, 0);
      BaseExtensionBottom.addBox(3.5F, 22.5F, 6F, 2, 1, 2);
      BaseExtensionBottom.setRotationPoint(0F, 0F, 0F);
      BaseExtensionBottom.setTextureSize(64, 32);
      BaseExtensionBottom.mirror = true;
      setRotation(BaseExtensionBottom, 0F, 0F, 0F);
      BaseExtensionTop = new ModelRenderer(this, 30, 0);
      BaseExtensionTop.addBox(3.5F, 19.5F, 6F, 2, 1, 2);
      BaseExtensionTop.setRotationPoint(0F, 0F, 0F);
      BaseExtensionTop.setTextureSize(64, 32);
      BaseExtensionTop.mirror = true;
      setRotation(BaseExtensionTop, 0F, 0F, 0F);
      LockHandRight = new ModelRenderer(this, 38, 0);
      LockHandRight.addBox(2.5F, 15.5F, 6.5F, 1, 5, 1);
      LockHandRight.setRotationPoint(0F, 0F, 0F);
      LockHandRight.setTextureSize(64, 32);
      LockHandRight.mirror = true;
      setRotation(LockHandRight, 0F, 0F, 0F);
      LockHandLeft = new ModelRenderer(this, 42, 0);
      LockHandLeft.addBox(5.5F, 15.5F, 6.5F, 1, 5, 1);
      LockHandLeft.setRotationPoint(0F, 0F, 0F);
      LockHandLeft.setTextureSize(64, 32);
      LockHandLeft.mirror = true;
      setRotation(LockHandLeft, 0F, 0F, 0F);
      LockHandTop = new ModelRenderer(this, 46, 0);
      LockHandTop.addBox(3.5F, 15F, 6.5F, 2, 1, 1);
      LockHandTop.setRotationPoint(0F, 0F, 0F);
      LockHandTop.setTextureSize(64, 32);
      LockHandTop.mirror = true;
      setRotation(LockHandTop, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Base.render(f5);
    BaseExtensionRight.render(f5);
    BaseExtensionLeft.render(f5);
    BaseExtensionBottom.render(f5);
    BaseExtensionTop.render(f5);
    LockHandRight.render(f5);
    LockHandLeft.render(f5);
    LockHandTop.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  }

}
