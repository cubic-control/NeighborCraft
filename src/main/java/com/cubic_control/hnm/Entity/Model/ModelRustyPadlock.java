// Date: 12/27/2016 2:46:11 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.cubic_control.hnm.Entity.Model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelRustyPadlock extends ModelBase
{
  //fields
    ModelRenderer MainBox;
    ModelRenderer SideBoxRight;
    ModelRenderer SideBoxLeft;
    ModelRenderer SideBoxDown;
    ModelRenderer SideBoxUp1;
    ModelRenderer SideBoxUp2;
    ModelRenderer LockRingHandleRight;
    ModelRenderer LockRingHandleLeft;
    ModelRenderer LockRingHandleTop;
  
  public ModelRustyPadlock()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      MainBox = new ModelRenderer(this, 0, 0);
      MainBox.addBox(0F, 0F, 0F, 5, 5, 2);
      MainBox.setRotationPoint(2F, 18F, 6F);
      MainBox.setTextureSize(64, 32);
      MainBox.mirror = true;
      setRotation(MainBox, 0F, 0F, 0F);
      SideBoxRight = new ModelRenderer(this, 14, 0);
      SideBoxRight.addBox(0F, 0F, 0F, 1, 5, 1);
      SideBoxRight.setRotationPoint(1.5F, 17.5F, 6.5F);
      SideBoxRight.setTextureSize(64, 32);
      SideBoxRight.mirror = true;
      setRotation(SideBoxRight, 0F, 0F, 0F);
      SideBoxLeft = new ModelRenderer(this, 18, 0);
      SideBoxLeft.addBox(0F, 0F, 0F, 1, 5, 1);
      SideBoxLeft.setRotationPoint(6.5F, 17.5F, 6.5F);
      SideBoxLeft.setTextureSize(64, 32);
      SideBoxLeft.mirror = true;
      setRotation(SideBoxLeft, 0F, 0F, 0F);
      SideBoxDown = new ModelRenderer(this, 22, 0);
      SideBoxDown.addBox(0F, 0F, 0F, 4, 1, 1);
      SideBoxDown.setRotationPoint(2.5F, 22.5F, 6.5F);
      SideBoxDown.setTextureSize(64, 32);
      SideBoxDown.mirror = true;
      setRotation(SideBoxDown, 0F, 0F, 0F);
      SideBoxUp1 = new ModelRenderer(this, 22, 2);
      SideBoxUp1.addBox(0F, 0F, 0F, 1, 1, 1);
      SideBoxUp1.setRotationPoint(2.5F, 17.5F, 6.5F);
      SideBoxUp1.setTextureSize(64, 32);
      SideBoxUp1.mirror = true;
      setRotation(SideBoxUp1, 0F, 0F, 0F);
      SideBoxUp2 = new ModelRenderer(this, 28, 2);
      SideBoxUp2.addBox(0F, 0F, 0F, 1, 1, 1);
      SideBoxUp2.setRotationPoint(5.5F, 17.5F, 6.5F);
      SideBoxUp2.setTextureSize(64, 32);
      SideBoxUp2.mirror = true;
      setRotation(SideBoxUp2, 0F, 0F, 0F);
      LockRingHandleRight = new ModelRenderer(this, 40, 0);
      LockRingHandleRight.addBox(0F, 0F, 0F, 1, 2, 1);
      LockRingHandleRight.setRotationPoint(2.5F, 15.5F, 6.5F);
      LockRingHandleRight.setTextureSize(64, 32);
      LockRingHandleRight.mirror = true;
      setRotation(LockRingHandleRight, 0F, 0F, 0F);
      LockRingHandleLeft = new ModelRenderer(this, 44, 0);
      LockRingHandleLeft.addBox(0F, 0F, 0F, 1, 2, 1);
      LockRingHandleLeft.setRotationPoint(5.5F, 15.5F, 6.5F);
      LockRingHandleLeft.setTextureSize(64, 32);
      LockRingHandleLeft.mirror = true;
      setRotation(LockRingHandleLeft, 0F, 0F, 0F);
      LockRingHandleTop = new ModelRenderer(this, 48, 0);
      LockRingHandleTop.addBox(0F, 0F, 0F, 2, 1, 1);
      LockRingHandleTop.setRotationPoint(3.5F, 15F, 6.5F);
      LockRingHandleTop.setTextureSize(64, 32);
      LockRingHandleTop.mirror = true;
      setRotation(LockRingHandleTop, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    MainBox.render(f5);
    SideBoxRight.render(f5);
    SideBoxLeft.render(f5);
    SideBoxDown.render(f5);
    SideBoxUp1.render(f5);
    SideBoxUp2.render(f5);
    LockRingHandleRight.render(f5);
    LockRingHandleLeft.render(f5);
    LockRingHandleTop.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  }

}
